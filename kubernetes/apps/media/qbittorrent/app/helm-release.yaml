---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # controller:
    #   type: statefulset
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.6.1@sha256:796f135bcb572a3fb3138b0c65034535c0a7b1dcb83940fe12e00cad1b47fcbb
    env:
      TZ: Australia/Sydney
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &port-bt 44414
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        #externalIPs: ["${SVC_QBITTORRENT_ADDR}"]
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Local
    podAnnotations:
      setGateway: "true"
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"

          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-signin: https://bit.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx

        hosts:
          - host: &host "bit.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [10000]
    # volumeClaimTemplates:
    #   - name: config
    #     mountPath: /config
    #     accessMode: ReadWriteOnce
    #     size: 1Gi
    #     storageClass: ceph-block
    # Note: If downloading very large torrents it might be worth using NFS for your download directory.
    # Beware if you are downloading torrents directly to a ZFS dataset that dataset will accrue fragmentation.
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
      media:
        enabled: true
        type: nfs
        server: 10.0.0.165
        path: /volume1/Main/data/torrents
        mountPath: /torrents
      # incomplete:
         #enabled: true
         #type: nfs
         #server: 10.0.0.165
         #path: /volume1/Main/data/torrents/incomplete
     #nodeSelector:
       #node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 3000Mi
